
/* max FD number allowed open in a process */
rlimit nofile =  65535;

pid lock file = /var/lock/subsys/ejet.pid;

epump = {
    event notification = epoll; #select
    epump threads = 3;
    worker threads = 20;
}

http = {
    default type = application/octet-stream;

    /* ! * ' ( ) ; : @ & = + $ , / ? # [ ] */
    url not escape char = "-_.~!*'();:@&=+$,/?#][";

    cookie file = ./cookie.txt;

    include mime.types;

    access log = {
        log2file = on;
        log file = /var/log/access.log;

        format = [ '$remote_addr', '-', '[$datetime[stamp]]', '"$request"', 
                   '"$request_header[host]"', '"$request_header[referer]"', '"$http_user_agent"',
                   '$status', '$bytes_recv', '$bytes_sent'
                 ];
    }

    receive request = {
        max header size = 32K;

        #if body-length is greater thant it, body will be saved to cache file
        body cache = on;
        body cache threshold = 64K;  

        keepalive timeout = 30;
        connection idle timeout = 10;
        header idle timeout = 10;
        header timeout = 30;
        request handle timeout = 180;
    } 

    send request = {
        max header size = 32K;

        connecting timeout = 8;
        keepalive timeout = 3;
        connection idle timeout = 180;

        /* if request is sending by https:// */
        ssl certificate = cert.pem;
        ssl private key = cert.key;
        ssl ca certificate = cacert.pem;

        /* if request HTTPMsg existing Location, Location->root is in place */
        root = /opt/ejet;
        cache = on;
        cache file = <script>
                       if ($req_file_only)
                           return "${host_name}_${server_port}${req_path_only}${req_file_only}";
                       else if ($query[0])
                           return "${host_name}_${server_port}${req_path_only}${query[0]}";
                       else
                           return "${host_name}_${server_port}${req_path_only}index.html";
                     </script>;

        /* next proxy host and port when sending http request */
        proxy setting = {
            /* left-side is regular express to request host:port, right-side is proxy host and port */
            # ^(.+)sina.com.cn$ = 214.48.194.145:8080;
        };
    } 

    proxy = {
        connect tunnel = on;
        tunnel keepalive timeout = 30;
        auto redirect = on;

        buffer size = 256k;
    }

    listen = {
        local ip = *;
        port = 8443;
        forward proxy = off;

        ssl = on;
        ssl certificate = cert.pem;
        ssl private key = cert.key;
        ssl ca certificate = cacert.pem;

        host = {
            host name = *; #www.xxxx.com
            type = server;

            location = {
                type = server;
                path = [ "(\.(.+)$)|/", "~*" ];

                root = /opt/ejet/httpdoc;
                index = [ index.html, index.htm ];
                expires = 30D;
            }
        }
    }

    listen = {
        local ip = *; #192.168.1.151
        port = 8181;
        forward proxy = on;

        #request process library = reqhandle.so

        script = {
            #reply 302 https://ke.test.xxx.com:8443$request_uri;
            addResHeader X-Nat-IP $remote_addr;
        }

        host = {
            host name = cache1.cdn.yunzhai.cn;  #DNS dynamically resolving

            location = {
                type = proxy;
                path = [ "(\.(.+)$)|/", "~*" ];

                passurl = http://cdn.yunzhai.cn;  #origin server

                root = /opt/ejet/httpdoc;

                cache = on;
                script = {
                    if ($query[fid])
                        cache file = $real_path$query[fid]$req_file_ext;
                    else if ($req_file_only)
                        cache file = $real_path$req_file_only;
                    else if ($query[0])
                        cache file = ${real_path}index.html;
                    else
                        cache file = ${real_path}index.html;
                };
                <script>
                    rewrite ^(.*)\.php$ http://vcloud.yunzhai.cn/cdn/$1 forward;
                </script>;
            }
        }

        host = {
            host name = *; #www.downsha.com
            type = server | proxy | fastcgi;
            gzip = on;

            error page = {
                400 = 400.html; 401 = 401.html; 402 = 402.html; 403 = 403.html;
                404 = 404.html; 405 = 405.html; 406 = 406.html; 500 = 500.html;
                501 = 501.html; 502 = 502.html; 503 = 503.html; 504 = 504.html;

                root = /opt/ejet/errpage;
            }

            /*  =   表示精确匹配
                ' ' 空格开头，表示以该字符串为前缀的匹配，不是正则匹配
                ^~  表示uri以某个常规字符串开头，不是正则匹配
                ~   表示区分大小写的正则匹配;
                ~*  表示不区分大小写的正则匹配
                /   通用匹配, 如果没有其它匹配,任何请求都会匹配到

                匹配的优先级顺序为：
                    (location =) > (location 完整路径) > (location ^~ 路径) > 
                    (location ~,~* 正则顺序) > (location 部分起始路径) > (/)
             */

            location = {
                type = server;
                path = [ "\.(h|c|apk|gif|jpg|jpeg|png|bmp|ico|swf|js|css)$", "~*" ];

                root = /opt/ejet/httpdoc;
                index = [ index.html, index.htm ];
                expires = 30D;
            }

	    location = {
                type = fastcgi;
                path = [ "\.(php|php?)$", '~*'];

                passurl = fastcgi://127.0.0.1:9000;

                index = [ index.php ];
                root = /data/wwwroot/php;
            }

            location = {
                path = [ '/xxx', '^~' ];
                type = proxy;
                passurl = http://stat2.a.cibn.cc/;

                script = {
                    rewrite ^/xxx/([0-9]+)/.*$ /pump.h?id=$1;
                };
            }

            location = {
                path = [ '^/view/([0-9A-Fa-f]{32})$', '~*' ];
                type = proxy;
                passurl = http://cdn.cibn.cc/view/$1;

                root = /opt/cache/;
                cache = on;
                cache file = /opt/cache/${request_header[host]}/view/$1;

                script = {
                    addReqHeader X-Forwarded-For $remote_addr;
                    addReqHeader X-Real-IP2 $remote_addr;
                };
            }

            location = {
                path = [ '/topic-([0-9]+)-([0-9]+)-(.*)\.html$', '~*' ];
                type = proxy;
                passurl = https://k.test.cibn.cc:8443/main.c?topic=$1&start=$2;
            }

            location = {
                path = [ '/5g/', '^~' ];
                type = server;
 
                root = /home/hzke/sysdoc;

                index = [ 5G关键技术.pdf, index.html, index.htm ];
            }

            location = {
                path = [ '/' ];
                type = server;

                root = .;
                index = [ index.html, index.htm ];
            }
        }
    }

    fastcgi = {
        connecting timeout = 10;
        keepalive timeout = 30;
        connection idle timeout = 90; 
        fcgi server alive timeout = 120;

        buffer size = 256k;

        params = {
            SCRIPT_FILENAME   = $document_root$fastcgi_script_name;
            QUERY_STRING      = $query_string;
            REQUEST_METHOD    = $request_method;
            CONTENT_TYPE      = $content_type;
            CONTENT_LENGTH    = $content_length;

            SCRIPT_NAME       = $fastcgi_script_name;  #脚本名称   
            REQUEST_URI       = $request_uri;          #请求的地址带参数  
            DOCUMENT_URI      = $document_uri;         #不带Query参数
            DOCUMENT_ROOT     = $document_root;        #在Location配置中root的值   
            SERVER_PROTOCOL   = $server_protocol;      #协议HTTP/1.0或HTTP/1.1
            
            GATEWAY_INTERFACE = CGI/1.1;               # FastCGI/1.0;           #CGI/1.1  cgi 版本  
            SERVER_SOFTWARE   = ejet/$ejet_version;    #ejet 版本号，可修改、隐藏  
            
            REMOTE_ADDR       = $remote_addr;          #客户端IP  
            REMOTE_PORT       = $remote_port;          #客户端端口  
            SERVER_ADDR       = $server_addr;          #服务器IP地址  
            SERVER_PORT       = $server_port;          #服务器端口  
            SERVER_NAME       = $host_name;            #服务器名，在Host配置中指定的host name

            # PHP only, required if PHP was built with --enable-force-cgi-redirect  
            REDIRECT_STATUS   = 200;  
        }
    };

    gzip = {
        min length = 1k;
        buffer = 64k;
        compress level = 2;
        http version = 1.1;
        types = [ text/plain, application/x-javascript, text/css, application/xml ];
        vary = on;
    }
}

